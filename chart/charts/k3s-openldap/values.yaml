global:
  # Common labels to apply to all resources.
  commonLabels: {}
  # Common annotations to apply to all resources.
  commonAnnotations: {}

  # OpenLdap stack settings
  ldapDomain: "example.com"

  # Because im lazy and dont know how to parse strings in templates yet
  ldapDomainNameOnly: "example"
  ldapDomainExtension: "com"

  # Specifies an existing secret to be used for admin and config user passwords. 
  # for the helm-openldap chart.
  # DO NOT CHANGE THE NAME OF THIS SECRET UNLESS YOU KNOW WHAT YOU ARE DOING.
  existingSecret: ldap-secrets

  ldapPort: 389
  sslLdapPort: 636

enabled: true
enableExternalSecrets: true

# External secret used to populate the global.existingSecret.
externalSecret:
  enabled: true
  secretName: ""
  secretStore: "kubernetes"
  secretStoreType: "ClusterSecretStore"
  # Properties of the secretName secret in which the LDAP credentials are stored.
  properties:
    ldapAdmin: ""
    ldapConfig: ""
    ldapClient: ""

# phpldapadmin Ingress settings.
ldapAdminIngress:
  enabled: false
  ingressUrl: "ldap.example.com"
  middlewares: 
    - name: traefik-default-chain
      namespace: traefik
  entrypoint: websecure
  externalSecret:
    enabled: false
    secretName: ""
    secretStore: kubernetes
    secretStoreType: ClusterSecretStore

# ltb-passwd Ingress settings.
ltbIngress:
  enabled: false
  ingressUrl: "ltb.example.com"
  middlewares: 
    - name: traefik-default-chain
      namespace: traefik
  entrypoint: websecure
  externalSecret:
    enabled: false
    secretName: ""
    secretStore: kubernetes
    secretStoreType: ClusterSecretStore

phpldapadmin:
  enabled: true
  workload:
    main:
      podSpec:
        containers:
          main:
            env:
              PHPLDAPADMIN_LDAP_HOSTS: "openldap"

# Helm values for the openldap stack.
openldap-stack-ha:
  enabled: true
  clusterDomain: "cluster.local"

  # Schemas are not replicated, so make sure every schemas are defined in customSchemaFiles
  replicaCount: 1
  readonlyReplicaCount: 0

  # nameOverride String to partially override common.names.fullname
  nameOverride: "openldap"

  # Do not change the name of the chart this will break the ingress
  fullnameOverride: "openldap"

  service: 
    annotations: {}

    ## If service type NodePort, define the value here
    #ldapPortNodePort:
    #sslLdapPortNodePort:

    # Disable if you do not want to expose port on service
    enableLdapPort: true
    enableSslLdapPort: true

    ## List of IP addresses at which the service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    externalIPs: []

    ## Define a static clusterIP
    #clusterIP:
    #loadBalancerIP:
    #loadBalancerSourceRanges: []
    type: ClusterIP
    sessionAffinity: None
    externalTrafficPolicy: Cluster

  # Default configuration for openldap as environment variables. These get injected directly in the container.
  # Use the env variables from https://hub.docker.com/r/bitnami/openldap/
  # Be careful, do not modify the following values unless you know exactly what your are doing
  env:
    # set this to "true" to enable bootstrap debugging
    BITNAMI_DEBUG: "false"
    # higher -> less verbose. See https://www.openldap.org/doc/admin26/slapdconfig.html
    LDAP_LOGLEVEL: "256"
    LDAP_REQUIRE_TLS: "false"
    LDAPTLS_REQCERT: "never"
    LDAP_ENABLE_TLS: "yes"
    LDAP_SKIP_DEFAULT_TREE: "no"
    LDAP_ALLOW_ANON_BINDING: 'no'
    # LDAP_RFC2307BIS_SCHEMA: "true"

  # Pod Disruption Budget for Stateful Set
  # Disabled by default, to ensure backwards compatibility
  pdb:
    enabled: false
    minAvailable: 1
    maxUnavailable: ""

  # Schemas to initialise the 'LDAP_EXTRA_SCHEMAS' env var
  # initialSchema: "cosine,inetorgperson"
  initialSchemas: "cosine,rfc2307bis"

  # Custom openldap schema files used to be used in addition to default schemas
  # customSchemaFiles:
  #   #enable memberOf ldap search functionality, users automagically track groups they belong to
  #   00-memberof.ldif: |-
  #     # Load memberof module
  #     dn: cn=module,cn=config
  #     cn: module
  #     objectClass: olcModuleList
  #     olcModuleLoad: memberof
  #     olcModulePath: /opt/bitnami/openldap/lib/openldap

  #     dn: olcOverlay=memberof,olcDatabase={2}mdb,cn=config
  #     changetype: add
  #     objectClass: olcOverlayConfig
  #     objectClass: olcMemberOf
  #     olcOverlay: memberof
  #     olcMemberOfRefint: TRUE

  ## Existing configmap with custom ldif
  customLdifCm: custom-ldif-cm

  # Custom openldap ACLs
  # https://github.com/jp-gouin/helm-openldap/tree/master/advanced_examples
  customAcls: |
    dn: olcDatabase={2}mdb,cn=config
    changetype: modify
    replace: olcAccess
    olcAccess: {0}to *
      by dn.exact=gidNumber=0+uidNumber=1001,cn=peercred,cn=external,cn=auth manage
      by * break
    olcAccess: {1}to attrs=userPassword,shadowLastChange
      by self write
      by dn="cn=admin,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" write
      by anonymous auth by * none
    olcAccess: {2}to *
      by dn="cn=admin-read,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" read
      by dn="cn=admin,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" write
      by self read
      by * none
    olcAccess: {3}to dn.subtree="ou=users,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}"
      by dn="cn=authenticator,ou=services,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" read
      by dn="cn=admin-read,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" read
      by dn="cn=admin,dc={{ .Values.global.ldapDomainNameOnly }},dc={{ .Values.global.ldapDomainExtension }}" write
      by self read
      by * none

  replication:
    enabled: true
    # Enter the name of your cluster, defaults to "cluster.local"
    clusterName: "cluster.local"
    retry: 60
    timeout: 1
    interval: 00:00:00:10
    starttls: "critical"
    # override the tls_reqcert parameter (default if never and demand when initTLSSecret.tls_enabled = true )
    # tls_reqcert: "never"
    # override the location of tls_cacert to trust (allowed when initTLSSecret.tls_enabled = true )
    # tls_cacert: "/etc/ssl/certs/ca-certificates.crt"

  ## Persist data to a persistent volume
  persistence:
    enabled: false
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "standard-singlewriter"
    # existingClaim: openldap-pvc
    accessModes:
      - ReadWriteOnce
    size: 2Gi
    storageClass: ""

  ## OPENLDAP  resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param resources.limits The resources limits for the OPENLDAP  containers
  ## @param resources.requests The requested resources for the OPENLDAP  containers
  ##
  resources:
    limits: {}
    requests: {}

  ## @param hostAliases OPENLDAP  pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param podLabels Extra labels for OPENLDAP  pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param podAnnotations Annotations for OPENLDAP  pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
    ##
    key: ""
    ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param affinity Affinity for OPENLDAP  pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param nodeSelector Node labels for OPENLDAP  pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param tolerations Tolerations for OPENLDAP  pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param priorityClassName OPENLDAP  pods' priorityClassName
  ##
  priorityClassName: ""
  ## ltb-passwd
  # For more parameters check following file: ./charts/ltb-passwd/values.yaml
  ltb-passwd:
    enabled : false
  ## phpldapadmin
  ## For more parameters check following file: ./charts/phpldapadmin/values.yaml
  phpldapadmin:
    enabled: false
